# {{cookiecutter.project_name}} service Tiltfile
# This can be run independently or included by the main manifests Tiltfile
load('ext://secret', 'secret_from_dict')
load('ext://configmap', 'configmap_from_dict')
load('ext://dotenv', 'dotenv')

# CONSTANTS
DOTENV = dotenv() or {}
SYSENV = dict(os.environ)

# FUNCTIONS: we should move these to their own repo https://docs.tilt.dev/extensions.html#managing-your-own-extension-repo
def safe_local(cmd, default=''):
    """Execute a local command, return default value if it fails"""
    return str(local(cmd + ' 2>/dev/null || echo "' + default + '"')).strip() or default

def get_env_var(key, default=""):
    """Get environment variable with priority: dotenv > system env > gcloud secrets > default"""
    if key in DOTENV:  # Try dotenv first (if .env file exists)
        return DOTENV[key]
    
    if key in SYSENV:  # Try system environment variable
        return SYSENV[key]
    
    return safe_local('gcloud secrets versions access latest --secret="{}"'.format(key)) or default

# SECRETS/CONFIGMAPS
k8s_yaml(
    configmap_from_dict(
        '{{cookiecutter.project_slug}}-config', 
        inputs={
            'APP_ENV': get_env_var('APP_ENV', 'development'),
            'CORS_ALLOW_URLS': get_env_var('CORS_ALLOW_URLS', 'http://localhost:17300,http://127.0.0.1:17300,http://localhost:17600,http://127.0.0.1:17600'),
            'DEBUGPY_ENABLED': get_env_var('DEBUGPY_ENABLED', 'true'),
            'DEBUGPY_WAIT': get_env_var('DEBUGPY_WAIT', 'false'),
            'DEBUGPY_PORT': get_env_var('DEBUGPY_PORT', '5678'),
        }
    )
)

# MANIFESTS
k8s_yaml(helm(
    'manifests',
    values=['manifests/values-dev.yaml']
))

# BUILDS
docker_build(
    '{{cookiecutter.project_slug}}-app',
    context='.',
    dockerfile='Dockerfile',
    build_args={
        'INSTALL_DEV_DEPS': 'true',
    },
    live_update=[
        fall_back_on(['./.env']),
        sync('./src/', '/app/src/'),
        sync('./pyproject.toml', '/app/pyproject.toml'),
    ],
)

# RESOURCES
k8s_resource(
    '{{cookiecutter.project_slug}}',
    port_forwards=[
        # HOST:PORT, CONTAINER:PORT
        port_forward({{cookiecutter.tilt_api_port}}, {{cookiecutter.api_port}}, name="{{cookiecutter.project_slug}}-api"),
        port_forward({{cookiecutter.tilt_debug_port}}, {{cookiecutter.debug_port}}, name="{{cookiecutter.project_slug}}-debug"),
    ],
    resource_deps=[],
    labels=['backend'],
    links=[
        link('http://localhost:{{cookiecutter.tilt_api_port}}/docs', 'Swagger UI'),
        link('http://localhost:{{cookiecutter.tilt_api_port}}/redoc', 'ReDoc'),
        link('http://localhost:{{cookiecutter.tilt_api_port}}/openapi.json', 'OpenAPI JSON'),
    ],
) 